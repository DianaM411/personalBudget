{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst baseURI = 'http://localhost:8080';\nexport const apiSlice = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: baseURI\n  }),\n  endpoints: builder => ({\n    // get categories\n    getCategories: builder.query({\n      // get: 'http://localhost:8080/api/categories'\n      query: () => '/api/categories',\n      providesTags: ['categories']\n    }),\n    // get labels\n    getLabels: builder.query({\n      // get: 'http://localhost:8080/api/labels'\n      query: () => '/api/labels',\n      providesTags: ['transaction']\n    }),\n    // add new Transaction\n    addTransaction: builder.mutation({\n      query: initialTransaction => ({\n        // post: 'http://localhost:8080/api/transaction'\n        url: '/api/transaction',\n        method: \"POST\",\n        body: initialTransaction\n      }),\n      invalidatesTags: ['transaction']\n    }),\n    // delete record\n    deleteTransaction: builder.mutation({\n      query: recordId => ({\n        // delete: 'http://localhost:8080/api/transaction'\n        url: '/api/transaction',\n        method: \"DELETE\",\n        body: recordId\n      }),\n      invalidatesTags: ['transaction']\n    })\n  })\n});\nexport default apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","baseURI","apiSlice","baseQuery","baseUrl","endpoints","builder","getCategories","query","providesTags","getLabels","addTransaction","mutation","initialTransaction","url","method","body","invalidatesTags","deleteTransaction","recordId"],"sources":["C:/Users/diana/ExpensesTracker_MERN_Stack_App/client/src/store/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst baseURI = 'http://localhost:8080';\r\n\r\nexport const apiSlice = createApi({\r\n    baseQuery : fetchBaseQuery({ baseUrl : baseURI}),\r\n    endpoints : builder => ({\r\n        // get categories\r\n        getCategories : builder.query({\r\n            // get: 'http://localhost:8080/api/categories'\r\n            query: () => '/api/categories',\r\n            providesTags: ['categories']\r\n        }),\r\n\r\n        // get labels\r\n        getLabels : builder.query({\r\n            // get: 'http://localhost:8080/api/labels'\r\n            query : () => '/api/labels',\r\n            providesTags: ['transaction']\r\n        }),\r\n\r\n        // add new Transaction\r\n        addTransaction : builder.mutation({\r\n            query : (initialTransaction) => ({\r\n                  // post: 'http://localhost:8080/api/transaction'\r\n                url: '/api/transaction',\r\n                method: \"POST\",\r\n                body: initialTransaction\r\n            }),\r\n            invalidatesTags: ['transaction']\r\n        }),\r\n\r\n        // delete record\r\n        deleteTransaction : builder.mutation({\r\n            query : recordId => ({\r\n                // delete: 'http://localhost:8080/api/transaction'\r\n                url : '/api/transaction',\r\n                method : \"DELETE\",\r\n                body : recordId\r\n            }),\r\n            invalidatesTags: ['transaction']\r\n        })\r\n\r\n    })\r\n})\r\n\r\nexport default apiSlice;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,QAAQ,GAAGH,SAAS,CAAC;EAC9BI,SAAS,EAAGH,cAAc,CAAC;IAAEI,OAAO,EAAGH;EAAO,CAAC,CAAC;EAChDI,SAAS,EAAGC,OAAO,KAAK;IACpB;IACAC,aAAa,EAAGD,OAAO,CAACE,KAAK,CAAC;MAC1B;MACAA,KAAK,EAAEA,CAAA,KAAM,iBAAiB;MAC9BC,YAAY,EAAE,CAAC,YAAY;IAC/B,CAAC,CAAC;IAEF;IACAC,SAAS,EAAGJ,OAAO,CAACE,KAAK,CAAC;MACtB;MACAA,KAAK,EAAGA,CAAA,KAAM,aAAa;MAC3BC,YAAY,EAAE,CAAC,aAAa;IAChC,CAAC,CAAC;IAEF;IACAE,cAAc,EAAGL,OAAO,CAACM,QAAQ,CAAC;MAC9BJ,KAAK,EAAIK,kBAAkB,KAAM;QAC3B;QACFC,GAAG,EAAE,kBAAkB;QACvBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC,CAAC;MACFI,eAAe,EAAE,CAAC,aAAa;IACnC,CAAC,CAAC;IAEF;IACAC,iBAAiB,EAAGZ,OAAO,CAACM,QAAQ,CAAC;MACjCJ,KAAK,EAAGW,QAAQ,KAAK;QACjB;QACAL,GAAG,EAAG,kBAAkB;QACxBC,MAAM,EAAG,QAAQ;QACjBC,IAAI,EAAGG;MACX,CAAC,CAAC;MACFF,eAAe,EAAE,CAAC,aAAa;IACnC,CAAC;EAEL,CAAC;AACL,CAAC,CAAC;AAEF,eAAef,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}