{"ast":null,"code":"import _ from 'lodash';\nexport function getSum(transaction, type) {\n  let sum = _(transaction).groupBy(\"type\").map((objs, key) => {\n    if (!type) return _.sumBy(objs, 'amount'); // [300, 350, 500]\n\n    return {\n      'type': key,\n      'color': objs[0].color,\n      'total': _.sumBy(objs, 'amount')\n    };\n  }).value();\n\n  return sum;\n}\nexport function getLabels(transaction) {\n  let amountSum = getSum(transaction, 'type');\n\n  let Total = _.sum(getSum(transaction));\n\n  let percent = _(amountSum).map(objs => _.assign(objs, {\n    percent: 100 * objs.total / Total\n  })).value();\n\n  return percent;\n}\nexport function chart_Data(transaction, custom) {\n  let bg = _.map(transaction, a => a.color);\n\n  bg = _.uniq(bg);\n  let dataValue = getSum(transaction);\n  const config = {\n    data: {\n      datasets: [{\n        data: dataValue,\n        backgroundColor: bg,\n        hoverOffset: 4,\n        borderRadius: 30,\n        spacing: 10\n      }]\n    },\n    options: {\n      cutout: 115\n    }\n  };\n  return custom !== null && custom !== void 0 ? custom : config;\n}\nexport function getTotal(transaction) {\n  return _.sum(getSum(transaction));\n}","map":{"version":3,"sources":["C:/Users/diana/ExpensesTracker_MERN_Stack_App/client/src/helper/helper.js"],"names":["_","getSum","transaction","type","sum","groupBy","map","objs","key","sumBy","color","value","getLabels","amountSum","Total","percent","assign","total","chart_Data","custom","bg","a","uniq","dataValue","config","data","datasets","backgroundColor","hoverOffset","borderRadius","spacing","options","cutout","getTotal"],"mappings":"AAAA,OAAQA,CAAR,MAAe,QAAf;AAEA,OAAO,SAASC,MAAT,CAAgBC,WAAhB,EAA6BC,IAA7B,EAAkC;AACrC,MAAIC,GAAG,GAAGJ,CAAC,CAACE,WAAD,CAAD,CACSG,OADT,CACiB,MADjB,EAESC,GAFT,CAEa,CAACC,IAAD,EAAOC,GAAP,KAAe;AAClB,QAAG,CAACL,IAAJ,EAAU,OAAOH,CAAC,CAACS,KAAF,CAAQF,IAAR,EAAc,QAAd,CAAP,CADQ,CACwB;;AAC1C,WAAO;AACH,cAASC,GADN;AAEH,eAAUD,IAAI,CAAC,CAAD,CAAJ,CAAQG,KAFf;AAGH,eAAUV,CAAC,CAACS,KAAF,CAAQF,IAAR,EAAc,QAAd;AAHP,KAAP;AAKD,GATT,EAUSI,KAVT,EAAV;;AAWA,SAAOP,GAAP;AACH;AAED,OAAO,SAASQ,SAAT,CAAmBV,WAAnB,EAA+B;AAClC,MAAIW,SAAS,GAAGZ,MAAM,CAACC,WAAD,EAAc,MAAd,CAAtB;;AACA,MAAIY,KAAK,GAAGd,CAAC,CAACI,GAAF,CAAMH,MAAM,CAACC,WAAD,CAAZ,CAAZ;;AAEA,MAAKa,OAAO,GAAGf,CAAC,CAACa,SAAD,CAAD,CACUP,GADV,CACcC,IAAI,IAAIP,CAAC,CAACgB,MAAF,CAAST,IAAT,EAAe;AAAEQ,IAAAA,OAAO,EAAI,MAAMR,IAAI,CAACU,KAAZ,GAAsBH;AAAlC,GAAf,CADtB,EAEUH,KAFV,EAAf;;AAIA,SAAOI,OAAP;AACH;AAED,OAAO,SAASG,UAAT,CAAoBhB,WAApB,EAAiCiB,MAAjC,EAAwC;AAE3C,MAAIC,EAAE,GAAGpB,CAAC,CAACM,GAAF,CAAMJ,WAAN,EAAmBmB,CAAC,IAAIA,CAAC,CAACX,KAA1B,CAAT;;AACAU,EAAAA,EAAE,GAAGpB,CAAC,CAACsB,IAAF,CAAOF,EAAP,CAAL;AACA,MAAIG,SAAS,GAAGtB,MAAM,CAACC,WAAD,CAAtB;AAEA,QAAMsB,MAAM,GAAG;AACXC,IAAAA,IAAI,EAAG;AACLC,MAAAA,QAAQ,EAAE,CAAC;AACPD,QAAAA,IAAI,EAAEF,SADC;AAEPI,QAAAA,eAAe,EAAEP,EAFV;AAGPQ,QAAAA,WAAW,EAAE,CAHN;AAIPC,QAAAA,YAAY,EAAG,EAJR;AAKPC,QAAAA,OAAO,EAAE;AALF,OAAD;AADL,KADI;AAUXC,IAAAA,OAAO,EAAG;AACNC,MAAAA,MAAM,EAAE;AADF;AAVC,GAAf;AAeA,SAAOb,MAAP,aAAOA,MAAP,cAAOA,MAAP,GAAiBK,MAAjB;AAEH;AAED,OAAO,SAASS,QAAT,CAAkB/B,WAAlB,EAA8B;AACjC,SAAOF,CAAC,CAACI,GAAF,CAAMH,MAAM,CAACC,WAAD,CAAZ,CAAP;AACH","sourcesContent":["import  _ from 'lodash';\r\n\r\nexport function getSum(transaction, type){\r\n    let sum = _(transaction)\r\n                      .groupBy(\"type\")\r\n                      .map((objs, key) => {\r\n                        if(!type) return _.sumBy(objs, 'amount'); // [300, 350, 500]\r\n                        return {\r\n                            'type' : key,\r\n                            'color' : objs[0].color,\r\n                            'total' : _.sumBy(objs, 'amount')\r\n                        }\r\n                      })\r\n                      .value()\r\n    return sum;\r\n}\r\n\r\nexport function getLabels(transaction){\r\n    let amountSum = getSum(transaction, 'type');\r\n    let Total = _.sum(getSum(transaction));\r\n\r\n    let  percent = _(amountSum)\r\n                            .map(objs => _.assign(objs, { percent : (100 * objs.total)  / Total}))\r\n                            .value()\r\n\r\n    return percent;\r\n}\r\n\r\nexport function chart_Data(transaction, custom){\r\n\r\n    let bg = _.map(transaction, a => a.color)\r\n    bg = _.uniq(bg)\r\n    let dataValue = getSum(transaction)\r\n\r\n    const config = {\r\n        data : {\r\n          datasets: [{\r\n              data: dataValue,\r\n              backgroundColor: bg,\r\n              hoverOffset: 4,\r\n              borderRadius : 30,\r\n              spacing: 10\r\n            }]\r\n        },\r\n        options : {\r\n            cutout: 115\r\n        }\r\n    }\r\n\r\n    return custom ?? config;\r\n\r\n}\r\n\r\nexport function getTotal(transaction){\r\n    return _.sum(getSum(transaction));\r\n}"]},"metadata":{},"sourceType":"module"}